# Final re-attempt with all necessary variables properly initialized

# Re-import necessary libraries and set up environment
from PIL import Image, ImageDraw

# Reload base image and set animation parameters
base_image_path = "Downloads/vaporwave_lares.png"
base_image = Image.open(base_image_path)

# Set up dimensions and reinitialize settings
width, height = base_image.size
num_frames = 30  # Total frames in the GIF
cloud_speed = 2  # Pixels per frame for clouds
leaf_speed = 5   # Pixels per frame for leaves
mucaro_start = (int(width * 0.1), int(height * 0.1))  # Starting position for the owl
mucaro_end = (int(width * 1.1), int(height * -0.1))   # Ending position for the owl

# Define cloud and leaf positions
cloud_positions_extended = [int(width * 0.2), int(width * 0.4), int(width * 0.6), int(width * 0.8)]
leaves_positions = [int(height * 0.7), int(height * 0.8)]  # Initial positions of leaves

# Owl shape and details
owl_shape = Image.new("RGBA", (50, 50))
draw_owl = ImageDraw.Draw(owl_shape)
draw_owl.polygon([(25, 0), (15, 20), (35, 20)], fill=(139, 69, 19, 200))
draw_owl.polygon([(0, 15), (20, 25), (15, 10)], fill=(139, 69, 19, 200))
draw_owl.polygon([(50, 15), (30, 25), (35, 10)], fill=(139, 69, 19, 200))

frames_final_attempt = []

# Create frames for the GIF
for frame_num in range(num_frames):
    frame = base_image.copy()
    draw = ImageDraw.Draw(frame)
    
    # Add stationary sun in the background
    sun_position = (int(width * 0.8), int(height * 0.2))
    draw.ellipse([(sun_position[0] - 30, sun_position[1] - 30), 
                  (sun_position[0] + 30, sun_position[1] + 30)], fill=(255, 223, 128, 200))

    # Create natural-looking clouds
    for i, cloud_pos in enumerate(cloud_positions_extended):
        x_position = cloud_pos + frame_num * cloud_speed
        y_position = height * (0.1 + i * 0.05)  # Stagger clouds vertically
        draw.ellipse([(x_position % width - 120, y_position), (x_position % width + 120, y_position + 40)], 
                     fill=(255, 255, 255, 80))  # Softer cloud shape

    # Moving leaves
    for leaf_y in leaves_positions:
        y_position = leaf_y + frame_num * leaf_speed
        draw.ellipse([(width - y_position % width, y_position % height),
                      (width - y_position % width + 10, y_position % height + 5)], 
                     fill=(34, 139, 34, 150))

    # Larger owl (m√∫caro) with increased scale
    mucaro_x = int(mucaro_start[0] + (mucaro_end[0] - mucaro_start[0]) * (frame_num / num_frames))
    mucaro_y = int(mucaro_start[1] + (mucaro_end[1] - mucaro_start[1]) * (frame_num / num_frames))
    owl_size = int(50 * (1 + frame_num / num_frames))  # Scale owl significantly larger

    # Resize owl and paste
    owl_scaled = owl_shape.resize((owl_size, owl_size), Image.Resampling.LANCZOS)
    frame.paste(owl_scaled, (mucaro_x - owl_size // 2, mucaro_y - owl_size // 2), owl_scaled)

    frames_final_attempt.append(frame)

# Save the final GIF with adjustments
final_gif_path_attempt = "Pictures\\Wallpapers\\mucarowave.gif"
frames_final_attempt[0].save(final_gif_path_attempt, save_all=True, append_images=frames_final_attempt[1:], duration=100, loop=0, transparency=0)

final_gif_path_attempt
